"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1969],{982:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>l,contentTitle:()=>t,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=o(5893),s=o(1151);const r={},t="\u4f7f\u7528blazor server\u548csignalr\u5b9e\u73b0\u5728\u7ebf\u4e94\u5b50\u68cb",i={permalink:"/blog/\u4e94\u5b50\u68cb",source:"@site/blog/\u4e94\u5b50\u68cb.md",title:"\u4f7f\u7528blazor server\u548csignalr\u5b9e\u73b0\u5728\u7ebf\u4e94\u5b50\u68cb",description:"\u524d\u4e9b\u5929\u5973\u670b\u53cb\u9080\u8bf7\u6211\u4e00\u8d77\u73a9\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u91cc\u7684\u67d0\u4e2a\u4e94\u5b50\u68cb\u6e38\u620f,\u7ecf\u5e38\u8fdb\u4e0d\u53bb\u623f\u95f4\u4e14\u5e7f\u544a\u6781\u591a,\u4ee4\u4eba\u751f\u538c.\u4e8e\u662f\u5c31\u6709\u4e86\u8fd9\u4e2a\u7ec3\u624b\u5c0f\u9879\u76ee",date:"2025-03-07T10:11:06.000Z",tags:[],readingTime:9.84,hasTruncateMarker:!1,authors:[],frontMatter:{},unlisted:!1,nextItem:{title:"\u6c5f\u5357\u4e0e\u5e08\u59d0",permalink:"/blog/\u6c5f\u5357\u4e0e\u5e08\u59d0"}},l={authorsImageUrls:[]},c=[{value:"\u501f\u9274\u53ca\u5f15\u7528\u5185\u5bb9",id:"\u501f\u9274\u53ca\u5f15\u7528\u5185\u5bb9",level:2},{value:"\u4e94\u5b50\u68cb\u5355\u673a\u90e8\u5206\u4ee3\u7801\u5b9e\u73b0\u4ed3\u5e93\u5730\u5740",id:"\u4e94\u5b50\u68cb\u5355\u673a\u90e8\u5206\u4ee3\u7801\u5b9e\u73b0\u4ed3\u5e93\u5730\u5740",level:2},{value:"\u5751\u70b9",id:"\u5751\u70b9",level:2},{value:"\u4e3b\u8981\u4ee3\u7801",id:"\u4e3b\u8981\u4ee3\u7801",level:2},{value:"Program.cs",id:"programcs",level:3},{value:"GoBangHub.cs(signalr\u96c6\u7ebf\u5668)",id:"gobanghubcssignalr\u96c6\u7ebf\u5668",level:3},{value:"Gobang.razor.cs",id:"gobangrazorcs",level:3},{value:"Gobang.razor.cs",id:"gobangrazorcs-1",level:3},{value:"Gobang.razor.cs",id:"gobangrazorcs-2",level:3}];function m(n){const e={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"\u524d\u4e9b\u5929\u5973\u670b\u53cb\u9080\u8bf7\u6211\u4e00\u8d77\u73a9\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u91cc\u7684\u67d0\u4e2a\u4e94\u5b50\u68cb\u6e38\u620f,\u7ecf\u5e38\u8fdb\u4e0d\u53bb\u623f\u95f4\u4e14\u5e7f\u544a\u6781\u591a,\u4ee4\u4eba\u751f\u538c.\u4e8e\u662f\u5c31\u6709\u4e86\u8fd9\u4e2a\u7ec3\u624b\u5c0f\u9879\u76ee"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.a,{href:"https://github.com/zfyzmh/BlazorGame",children:"github\u4ed3\u5e93\u5730\u5740"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"alt text",src:o(5885).Z+"",width:"1920",height:"929"})}),"\n",(0,a.jsx)(e.h2,{id:"\u501f\u9274\u53ca\u5f15\u7528\u5185\u5bb9",children:"\u501f\u9274\u53ca\u5f15\u7528\u5185\u5bb9"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.a,{href:"https://docs.meowv.com/stack/blazor/gomoku-games-based-on-blazor.html",children:"\u963f\u661fplus\u535a\u5ba2"})}),"\n",(0,a.jsx)(e.h2,{id:"\u4e94\u5b50\u68cb\u5355\u673a\u90e8\u5206\u4ee3\u7801\u5b9e\u73b0\u4ed3\u5e93\u5730\u5740",children:(0,a.jsx)(e.a,{href:"https://github.com/ut32/gobang/",children:"\u4e94\u5b50\u68cb\u5355\u673a\u90e8\u5206\u4ee3\u7801\u5b9e\u73b0\u4ed3\u5e93\u5730\u5740"})}),"\n",(0,a.jsx)(e.h2,{id:"\u5751\u70b9",children:"\u5751\u70b9"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"\u526a\u8d34\u677f\u51fd\u6570\u5fc5\u987b\u662fhttps\u6216\u8005\u672c\u5730\u624d\u53ef\u4ee5\u8c03\u7528"}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"text.json\u65e0\u6cd5\u89e3\u6790\u4e8c\u7ef4\u6570\u7ec4,\u9700\u5207\u6362json.net"}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"signalr\u66f4\u65b0\u6570\u636e\u540e\u65e0\u6cd5\u53ca\u65f6\u5237\u65b0\u9875\u9762 \u89e3\u51b3\u65b9\u6cd5\u4e3a StateHasChanged() \u6539\u4e3a InvokeAsync(StateHasChanged);\u6709\u70b9winform\u4e2dthis.invoke\u90a3\u5473\u4e86"}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:'appsettings.json\u4e2d\u6216appsettings.Development.json\u4e2d\u9700\u6dfb\u52a0"DetailedErrors": true\u4ee5\u663e\u793a\u8be6\u7ec6\u7684\u9519\u8bef\u4fe1\u606f,\u526a\u5207\u677f\u62a5\u9519\u65f6\u63d0\u793a\u6211\u505a\u7684'}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"\u4e3b\u8981\u4ee3\u7801",children:"\u4e3b\u8981\u4ee3\u7801"}),"\n",(0,a.jsx)(e.h3,{id:"programcs",children:"Program.cs"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-csharp",children:'using Gobang.GameHub;\nusing Microsoft.AspNetCore.Components;\nusing Microsoft.AspNetCore.Components.Web;\nusing MudBlazor.Services;\n\nnamespace Gobang\n{\n    public class Program\n    {\n        public static void Main(string[] args)\n        {\n            var builder = WebApplication.CreateBuilder(args);\n\n            // Add services to the container.\n\n            builder.Services.AddSignalR()\n                .AddNewtonsoftJsonProtocol();\n            builder.Services.AddRazorPages();\n            builder.Services.AddServerSideBlazor();\n\n            builder.Services.AddMudServices();\n            builder.WebHost.UseUrls("http://*:5005");\n\n            var app = builder.Build();\n\n            // Configure the HTTP request pipeline.\n            if (!app.Environment.IsDevelopment())\n            {\n                app.UseExceptionHandler("/Error");\n            }\n\n            app.UseStaticFiles();\n\n            app.UseRouting();\n\n            app.MapBlazorHub();\n            app.MapFallbackToPage("/_Host");\n            app.MapHub<BlazorChatSampleHub>(BlazorChatSampleHub.HubUrl);\n            app.MapHub<GoBangHub>(GoBangHub.HubUrl);\n\n            app.Run();\n        }\n    }\n} \n'})}),"\n",(0,a.jsx)(e.h3,{id:"gobanghubcssignalr\u96c6\u7ebf\u5668",children:"GoBangHub.cs(signalr\u96c6\u7ebf\u5668)"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-csharp",children:'using Gobang.Model;\nusing Microsoft.AspNetCore.SignalR;\nusing Microsoft.Extensions.Caching.Memory;\n\nnamespace Gobang.GameHub\n{\n    public class GoBangHub : Hub\n    {\n        public const string HubUrl = "/gobang";\n\n        private static readonly List<GoBangRoom> goBangRooms = new();\n\n        public override Task OnConnectedAsync()\n        {\n            Console.WriteLine($"{Context.ConnectionId} connected");\n            return base.OnConnectedAsync();\n        }\n\n        public override async Task OnDisconnectedAsync(Exception? exception)\n        {\n            Console.WriteLine($"Disconnected {exception?.Message} {Context.ConnectionId}");\n            await base.OnDisconnectedAsync(exception);\n        }\n\n        /// <summary>\n        /// \u521b\u5efa\u623f\u95f4(\u5373\u521b\u5efa\u7fa4\u7ec4)\n        /// </summary>\n        /// <param name="roomName">\u623f\u95f4\u540d(\u7fa4\u7ec4\u540d)</param>\n        /// <param name="password">\u5bc6\u7801(\u53ef\u9009)</param>\n        /// <returns></returns>\n        public async Task CreateRoom(string roomName, string? password = null)\n        {\n            goBangRooms.Add(new GoBangRoom() { Guid = Guid.NewGuid(), RoomName = roomName, Password = password });\n\n            await Groups.AddToGroupAsync(Context.ConnectionId, roomName);\n        }\n\n        /// <summary>\n        /// \u52a0\u5165\u623f\u95f4(\u7fa4\u7ec4)\n        /// </summary>\n        /// <param name="roomName">\u623f\u95f4\u540d(\u7fa4\u7ec4\u540d)</param>\n        /// <param name="password">\u5bc6\u7801(\u53ef\u9009)</param>\n        /// <returns></returns>\n        public async Task GetIntoRoom(string roomName, string? password = null)\n        {\n            var room = goBangRooms.FirstOrDefault(m => m.RoomName == roomName);\n\n            if (room == null)\n            {\n                await Clients.Caller.SendAsync("Alert", "\u672a\u627e\u5230\u8be5\u623f\u95f4!");\n                return;\n            }\n            else\n            {\n                if (!string.IsNullOrEmpty(room.Password) && room.Password != password)\n                {\n                    await Clients.Caller.SendAsync("Alert", "\u623f\u95f4\u5bc6\u7801\u9519\u8bef!");\n                    return;\n                }\n            }\n\n            await Groups.AddToGroupAsync(Context.ConnectionId, roomName);\n        }\n\n        /// <summary>\n        /// \u843d\u5b50\n        /// </summary>\n        /// <param name="room">\u623f\u95f4</param>\n        /// <param name="Chess">\u68cb\u76d8</param>\n        /// <returns></returns>\n        public async Task Playing(GoBangRoom room, int[,] Chess)\n        {\n            goBangRooms.First(m => m.RoomName == room.RoomName).Chess = Chess;\n            await Clients.OthersInGroup(room.RoomName).SendAsync("SynchronizeCheckerboard", Chess);\n        }\n\n        public async Task Win(GoBangRoom room)\n        {\n            await Clients.OthersInGroup(room.RoomName).SendAsync("Alert", "\\n\u4f60\u4e2a\u6e23\u6e23\ud83d\udc4e");\n        }\n    }\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"gobangrazorcs",children:"Gobang.razor.cs"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-html",children:'\n@page "/"\n@page "/{RoomName}"\n\n@inject IJSRuntime JS\n\n<div class="gobang-box">\n    <Gobang.Shared.Chessboard Chess="Chess" OnPlaying="Playing"></Gobang.Shared.Chessboard>\n</div>\n<div class="chess-info">\n    <h1>\u4e94\u5b50\u68cb\u26ab\u26aa</h1>\n    @if (!IsInRoom)\n    {\n        <p><MudButton Variant="Variant.Outlined" Color="Color.Primary" @onclick="CreateRoom">\u521b\u5efa\u623f\u95f4</MudButton></p>\n        <p><MudButton Variant="Variant.Outlined" Color="Color.Primary" @onclick="GetIntoRoom">\u52a0\u5165\u623f\u95f4</MudButton></p>\n    }\n    else\n    {\n        <p><MudButton Variant="Variant.Outlined" Color="Color.Primary" @onclick="StartGame">@(IsInGame ? "\u91cd\u7f6e\u6e38\u620f" : "\u5f00\u59cb\u6e38\u620f")</MudButton></p>\n\n        <p><MudButton Variant="Variant.Outlined" Color="Color.Primary" @onclick="Invite">\u9080\u8bf7\u670b\u53cb</MudButton></p>\n    }\n\n    <div class="chess-msg">\n        <p><b>@msgs</b></p>\n        <span>\u7b2c\u4e00\u6b65,\u521b\u5efa\u623f\u95f4</span>\n        <span>\u7b2c\u4e8c\u6b65,\u70b9\u51fb\u9080\u8bf7\u670b\u53cb</span>\n        <span>\u7b2c\u4e09\u6b65,\u7b49\u670b\u53cb\u8fdb\u5165\u7f51\u9875\u540e\u70b9\u51fb\u5f00\u59cb\u6e38\u620f</span>\n        <span>\u7b2c\u56db\u6b65,\u843d\u5b50</span>\n        <p>\u6e38\u620f\u89c4\u5219\uff1a</p>\n        <span>\uff081\uff09\u623f\u4e3b\u59cb\u7ec8\u9ed1\u68cb\u5148\u624b\u3002</span>\n        <span>\uff082\uff09\u70b9\u51fb\u5f00\u59cb\u6e38\u620f\u6309\u94ae\u5f00\u59cb\u5bf9\u5c40\u3002</span>\n        <span>\uff084\uff09\u5bf9\u5c40\u53cc\u65b9\u5404\u6267\u4e00\u8272\u68cb\u5b50\u3002</span>\n        <span>\uff085\uff09\u7a7a\u68cb\u76d8\u5f00\u5c40\u3002</span>\n        <span>\uff086\uff09\u9ed1\u5148\u3001\u767d\u540e\uff0c\u4ea4\u66ff\u4e0b\u5b50\uff0c\u6bcf\u6b21\u53ea\u80fd\u4e0b\u4e00\u5b50\u3002</span>\n        <span>\uff087\uff09\u68cb\u5b50\u4e0b\u5728\u68cb\u76d8\u7684\u7a7a\u767d\u70b9\u4e0a\uff0c\u68cb\u5b50\u4e0b\u5b9a\u540e\uff0c\u4e0d\u5f97\u5411\u5176\u5b83\u70b9\u79fb\u52a8\uff0c\u4e0d\u5f97\u4ece\u68cb\u76d8\u4e0a\u62ff\u6389\u6216\u62ff\u8d77\u53e6\u843d\u522b\u5904\u3002</span>\n        <span>\uff088\uff09\u9ed1\u65b9\u7684\u7b2c\u4e00\u679a\u68cb\u5b50\u53ef\u4e0b\u5728\u68cb\u76d8\u4efb\u610f\u4ea4\u53c9\u70b9\u4e0a\u3002</span>\n        <span>\uff089\uff09\u8f6e\u6d41\u4e0b\u5b50\u662f\u53cc\u65b9\u7684\u6743\u5229\uff0c<del>\u4f46\u5141\u8bb8\u4efb\u4f55\u4e00\u65b9\u653e\u5f03\u4e0b\u5b50\u6743\uff08\u5373\uff1aPASS\u6743\uff09</del>\u3002</span>\n        <span>\uff0810\uff09<del>\u4e94\u5b50\u68cb\u5bf9\u5c40\uff0c\u6267\u884c\u9ed1\u65b9\u6307\u5b9a\u5f00\u5c40\u3001\u4e09\u624b\u53ef\u4ea4\u6362\u3001\u4e94\u624b\u4e24\u6253\u7684\u89c4\u5b9a\u3002\u6574\u4e2a\u5bf9\u5c40\u8fc7\u7a0b\u4e2d\u9ed1\u65b9\u6709\u7981\u624b\uff0c\u767d\u65b9\u65e0\u7981\u624b\u3002\u9ed1\u65b9\u7981\u624b\u6709\u4e09\u4e09\u7981\u624b\u3001\u56db\u56db\u7981\u624b\u548c\u957f\u8fde\u7981\u624b\u4e09\u79cd\u3002</del></span>\n    </div>\n</div>\n\n'})}),"\n",(0,a.jsx)(e.h3,{id:"gobangrazorcs-1",children:"Gobang.razor.cs"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-csharp",children:'using Gobang.GameHub;\nusing Gobang.Model;\nusing Microsoft.AspNetCore.Components;\nusing Microsoft.AspNetCore.SignalR.Client;\nusing Microsoft.JSInterop;\nusing MudBlazor;\n\nnamespace Gobang.Pages\n{\n    public partial class Gobang : IDisposable\n    {\n        [Inject] private NavigationManager? NavigationManager { get; set; }\n\n        [Inject]\n        private ISnackbar Snackbar { get; set; }\n\n        [Parameter]\n        public string RoomName { get; set; }\n\n        private int[,] Chess { get; set; } = new int[19, 19];\n\n        private string first = "He";\n\n        private bool IsInGame = false;\n\n        private bool IsInRoom = false;\n\n        private GoBangRoom? Room { get; set; }\n\n        private string msgs;\n\n        private int MineChess = 1;\n\n        private string? _hubUrl;\n        private HubConnection? _hubConnection;\n\n        protected override async Task OnInitializedAsync()\n        {\n            if (_hubConnection == null)\n            {\n                string baseUrl = NavigationManager!.BaseUri;\n\n                _hubUrl = baseUrl.TrimEnd(\'/\') + GoBangHub.HubUrl;\n\n                _hubConnection = new HubConnectionBuilder()\n                    .WithUrl(_hubUrl)\n                    .ConfigureLogging(logging => logging.AddConsole())\n                    .AddNewtonsoftJsonProtocol()\n                    .Build();\n\n                _hubConnection.On<int[,]>("SynchronizeCheckerboard", SynchronizeCheckerboard);\n                _hubConnection.On<string>("Alert", Alert);\n                await _hubConnection.StartAsync();\n            }\n\n            await base.OnInitializedAsync();\n        }\n\n        protected override async Task OnParametersSetAsync()\n        {\n            if (!string.IsNullOrEmpty(RoomName))\n            {\n                IsInRoom = true;\n                IsInGame = true;\n                MineChess = 2;\n                Room = new GoBangRoom() { RoomName = RoomName };\n                await _hubConnection!.SendAsync("GetIntoRoom", RoomName, "");\n            }\n            await base.OnParametersSetAsync();\n        }\n\n        private async Task Alert(string msg)\n        {\n            await JS.InvokeAsync<string>("alert", msg);\n\n            if (msg == "\\n\u4f60\u4e2a\u6e23\u6e23\ud83d\udc4e")\n            {\n                IsInGame = false;\n                Chess = new int[19, 19];\n            }\n        }\n\n        private async Task CreateRoom()\n        {\n            var roomname = await JS.InvokeAsync<string>("prompt", "\u8bf7\u8f93\u5165\u623f\u95f4\u540d\u79f0!", "\u623f\u95f4" + Guid.NewGuid());\n\n            if (string.IsNullOrEmpty(roomname)) return;\n\n            IsInRoom = true;\n\n            MineChess = 1;\n            if (string.IsNullOrEmpty(roomname)) return;\n            await _hubConnection!.SendAsync("CreateRoom", roomname, "");\n            Room = new GoBangRoom() { RoomName = roomname };\n        }\n\n        private async Task GetIntoRoom()\n        {\n            var roomname = await JS.InvokeAsync<string>("prompt", "\u8bf7\u8f93\u5165\u623f\u95f4\u540d\u79f0!");\n            if (string.IsNullOrEmpty(roomname)) return;\n\n            IsInRoom = true;\n            IsInGame = true;\n            await _hubConnection!.SendAsync("GetIntoRoom", roomname, "");\n            MineChess = 2;\n            Room = new GoBangRoom() { RoomName = roomname };\n        }\n\n        private async Task Invite()\n        {\n            Snackbar.Add("\u590d\u5236\u94fe\u63a5\u6210\u529f,\u5feb\u53bb\u9080\u8bf7\u4f60\u7684\u670b\u53cb\u5427!\ud83d\ude80");\n            await JS.InvokeVoidAsync("copyToClipboard", NavigationManager.BaseUri + Room!.RoomName);\n        }\n\n        private async Task StartGame()\n        {\n            // \u521d\u59cb\u5316\u68cb\u76d8\n            Chess = new int[19, 19];\n\n            IsInGame = true;\n            await _hubConnection!.SendAsync("Playing", Room, Chess);\n        }\n\n        private async Task Playing((int, int) value)\n        {\n            (int row, int cell) = value;\n\n            var numEqual = Chess.OfType<int>().Count(x => x == 1) == Chess.OfType<int>().Count(x => x == 2);\n\n            if (MineChess == 1)\n            {\n                if (!numEqual)\n                {\n                    Snackbar.Add("\u5bf9\u65b9\u843d\u5b50\u65f6\u95f4!\ud83d\ude80");\n                    return;\n                }\n            }\n            else\n            {\n                if (numEqual)\n                {\n                    Snackbar.Add("\u5bf9\u65b9\u843d\u5b50\u65f6\u95f4!\ud83d\ude80");\n                    return;\n                }\n            }\n\n            //\u662f\u5426\u5f00\u59cb\u6e38\u620f\uff0c\u5f53\u524d\u5224\u65ad\u6ca1\u5f00\u59cb\u7ed9\u51fa\u63d0\u793a\n            if (!IsInGame)\n            {\n                Snackbar.Add("\\n\ud83d\udcaa\u70b9\u51fb\u5f00\u59cb\u6e38\u620f\u6309\u94ae\u5f00\u542f\u5bf9\u5c40\uff0c\u8bf7\u9605\u8bfb\u6e38\u620f\u89c4\u5219\ud83d\udcaa");\n\n                return;\n            }\n\n            // \u5df2\u843d\u5b50\u76f4\u63a5\u8fd4\u56de\uff0c\u4e0d\u505a\u4efb\u4f55\u64cd\u4f5c\n            if (Chess[row, cell] != 0)\n                return;\n\n            // \u6839\u636e\u4f20\u8fdb\u6765\u7684\u5750\u6807\u8fdb\u884c\u6211\u65b9\u843d\u5b50\n            Chess[row, cell] = MineChess;\n\n            if (IsWin(MineChess, row, cell))\n            {\n                await JS.InvokeAsync<Task>("alert", "\\n\u606d\u559c\uff0c\u4f60\u8d62\u4e86\ud83d\udc4d");\n\n                IsInGame = !IsInGame;\n                await _hubConnection!.SendAsync("Win", Room);\n            }\n\n            // \u6211\u65b9\u843d\u5b50\u4e4b\u540e\u901a\u77e5\u5bf9\u65b9\u843d\u5b50\n            await _hubConnection!.SendAsync("Playing", Room, Chess);\n            StateHasChanged();\n        }\n\n        private void SynchronizeCheckerboard(int[,] chess)\n        {\n            Chess = chess;\n            InvokeAsync(StateHasChanged);\n        }\n\n        private bool IsWin(int chess, int row, int cell)\n        {\n            #region \u6a2a\u65b9\u5411 \u27a1\u2b05\n\n            {\n                var i = 1;\n                var score = 1;\n                var rightValid = true;\n                var leftValid = true;\n\n                while (i <= 5)\n                {\n                    var right = cell + i;\n                    if (rightValid && right < 19)\n                    {\n                        if (Chess[row, right] == chess)\n                        {\n                            score++;\n                            if (score >= 5)\n                                return true;\n                        }\n                        else\n                            rightValid = false;\n                    }\n\n                    var left = cell - i;\n                    if (leftValid && left >= 0)\n                    {\n                        if (Chess[row, left] == chess)\n                        {\n                            score++;\n                            if (score >= 5)\n                                return true;\n                        }\n                        else\n                            leftValid = false;\n                    }\n\n                    i++;\n                }\n            }\n\n            #endregion \u6a2a\u65b9\u5411 \u27a1\u2b05\n\n            #region \u7ad6\u65b9\u5411 \u2b07\u2b06\n\n            {\n                var i = 1;\n                var score = 1;\n                var topValid = true;\n                var bottomValid = true;\n\n                while (i < 5)\n                {\n                    var top = row - i;\n                    if (topValid && top >= 0)\n                    {\n                        if (Chess[top, cell] == chess)\n                        {\n                            score++;\n                            if (score >= 5)\n                                return true;\n                        }\n                        else\n                            topValid = false;\n                    }\n\n                    var bottom = row + i;\n                    if (bottomValid && bottom < 19)\n                    {\n                        if (Chess[bottom, cell] == chess)\n                        {\n                            score++;\n                            if (score >= 5)\n                                return true;\n                        }\n                        else\n                        {\n                            bottomValid = false;\n                        }\n                    }\n\n                    i++;\n                }\n            }\n\n            #endregion \u7ad6\u65b9\u5411 \u2b07\u2b06\n\n            #region \u6487\u65b9\u5411 \u2199\u2197\n\n            {\n                var i = 1;\n                var score = 1;\n                var topValid = true;\n                var bottomValid = true;\n\n                while (i < 5)\n                {\n                    var rightTopRow = row - i;\n                    var rightTopCell = cell + i;\n                    if (topValid && rightTopRow >= 0 && rightTopCell < 19)\n                    {\n                        if (Chess[rightTopRow, rightTopCell] == chess)\n                        {\n                            score++;\n                            if (score >= 5)\n                                return true;\n                        }\n                        else\n                            topValid = false;\n                    }\n\n                    var leftBottomRow = row + i;\n                    var leftBottomCell = cell - i;\n                    if (bottomValid && leftBottomRow < 19 && leftBottomCell >= 0)\n                    {\n                        if (Chess[leftBottomRow, leftBottomCell] == chess)\n                        {\n                            score++;\n                            if (score >= 5)\n                                return true;\n                        }\n                        else\n                            bottomValid = false;\n                    }\n\n                    i++;\n                }\n            }\n\n            #endregion \u6487\u65b9\u5411 \u2199\u2197\n\n            #region \u637a\u65b9\u5411 \u2198\u2196\n\n            {\n                var i = 1;\n                var score = 1;\n                var topValid = true;\n                var bottomValid = true;\n\n                while (i < 5)\n                {\n                    var leftTopRow = row - i;\n                    var leftTopCell = cell - i;\n                    if (topValid && leftTopRow >= 0 && leftTopCell >= 0)\n                    {\n                        if (Chess[leftTopRow, leftTopCell] == chess)\n                        {\n                            score++;\n                            if (score >= 5)\n                                return true;\n                        }\n                        else\n                            topValid = false;\n                    }\n\n                    var rightBottomRow = row + i;\n                    var rightBottomCell = cell + i;\n                    if (bottomValid && rightBottomRow < 19 && rightBottomCell < 19)\n                    {\n                        if (Chess[rightBottomRow, rightBottomCell] == chess)\n                        {\n                            score++;\n                            if (score >= 5)\n                                return true;\n                        }\n                        else\n                            bottomValid = false;\n                    }\n\n                    i++;\n                }\n            }\n\n            #endregion \u637a\u65b9\u5411 \u2198\u2196\n\n            return false;\n        }\n\n        public async void Dispose()\n        {\n            if (_hubConnection != null)\n            {\n                await _hubConnection.StopAsync();\n                await _hubConnection.DisposeAsync();\n                _hubConnection = null;\n            }\n        }\n    }\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"gobangrazorcs-2",children:"Gobang.razor.cs"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-csharp",children:'\n<div class="chess">\n    @for (var i = 0; i < 19; i++)\n    {\n        @for (var j = 0; j < 19; j++)\n        {\n            var _i = i;\n            var _j = j;\n            <div class="cell" @onclick="@(async () => await Playing(_i, _j))">\n                <span class="chess@(Chess[i, j])"></span>\n            </div>\n        }\n    }\n</div>\n\n@code {\n    [Parameter] public int[,] Chess { get; set; }\n    [Parameter]\n    public EventCallback<(int, int)> OnPlaying { get; set; }\n\n    private async Task Playing(int row, int cell)\n    {\n        if (OnPlaying.HasDelegate)\n        {\n            await OnPlaying.InvokeAsync((row, cell));\n        }\n    }\n}\n\n'})})]})}function d(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(m,{...n})}):m(n)}},5885:(n,e,o)=>{o.d(e,{Z:()=>a});const a=o.p+"assets/images/image-9540df3106cbcdbcc0d4a878a953b2a2.png"},1151:(n,e,o)=>{o.d(e,{Z:()=>i,a:()=>t});var a=o(7294);const s={},r=a.createContext(s);function t(n){const e=a.useContext(r);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:t(n.components),a.createElement(r.Provider,{value:e},n.children)}}}]);